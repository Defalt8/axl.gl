#pragma once
#define WIN32_LEAN_AND_MEAN 1
#include <windows.h>
#ifndef GET_X_LPARAM
#	define GET_X_LPARAM(x) ((SHORT)LOWORD(x))
#endif
#ifndef GET_Y_LPARAM
#	define GET_Y_LPARAM(y) ((SHORT)HIWORD(y))
#endif
#ifndef DMDO_DEFAULT
#	define DMDO_DEFAULT 0
#endif
#ifndef DMDO_90
#	define DMDO_90 1
#endif
#ifndef DMDO_180
#	define DMDO_180 2
#endif
#ifndef DMDO_270
#	define DMDO_270 3
#endif
#ifndef DM_DISPLAYORIENTATION
#	define DM_DISPLAYORIENTATION 0x80
#endif

#ifndef WM_UNICHAR
#define WM_UNICHAR			0x109
#endif
#ifndef UNICODE_NOCHAR
#define UNICODE_NOCHAR 0xFFFF
#endif

#ifndef WM_POINTERUPDATE
#define WM_POINTERUPDATE	0x245
#endif
#ifndef WM_POINTERDOWN
#define WM_POINTERDOWN		0x246
#endif
#ifndef WM_POINTERUP
#define WM_POINTERUP		0x247
#endif
#ifndef WM_MOUSEHWHEEL
#define WM_MOUSEHWHEEL		0x20E
#endif

#ifndef POINTER_MESSAGE_FLAG_NEW
#	define POINTER_MESSAGE_FLAG_NEW					0x00000001 // New pointer
#endif
#ifndef POINTER_MESSAGE_FLAG_INRANGE
#	define POINTER_MESSAGE_FLAG_INRANGE				0x00000002 // Pointer has not departed
#endif
#ifndef POINTER_MESSAGE_FLAG_INCONTACT
#	define POINTER_MESSAGE_FLAG_INCONTACT			0x00000004 // Pointer is in contact
#endif
#ifndef POINTER_MESSAGE_FLAG_FIRSTBUTTON
#	define POINTER_MESSAGE_FLAG_FIRSTBUTTON			0x00000010 // Primary action
#endif
#ifndef POINTER_MESSAGE_FLAG_SECONDBUTTON
#	define POINTER_MESSAGE_FLAG_SECONDBUTTON		0x00000020 // Secondary action
#endif
#ifndef POINTER_MESSAGE_FLAG_THIRDBUTTON
#	define POINTER_MESSAGE_FLAG_THIRDBUTTON			0x00000040 // Third button
#endif
#ifndef POINTER_MESSAGE_FLAG_FOURTHBUTTON
#	define POINTER_MESSAGE_FLAG_FOURTHBUTTON		0x00000080 // Fourth button
#endif
#ifndef POINTER_MESSAGE_FLAG_FIFTHBUTTON
#	define POINTER_MESSAGE_FLAG_FIFTHBUTTON			0x00000100 // Fifth button
#endif
#ifndef POINTER_MESSAGE_FLAG_PRIMARY
#	define POINTER_MESSAGE_FLAG_PRIMARY				0x00002000 // Pointer is primary
#endif
#ifndef POINTER_MESSAGE_FLAG_CONFIDENCE
#	define POINTER_MESSAGE_FLAG_CONFIDENCE			0x00004000 // Pointer is considered unlikely to be accidental
#endif
#ifndef POINTER_MESSAGE_FLAG_CANCELED
#	define POINTER_MESSAGE_FLAG_CANCELED			0x00008000 // Pointer is departing in an abnormal manner
#endif


#ifndef GET_POINTERID_WPARAM
#	define GET_POINTERID_WPARAM(wParam)				(LOWORD(wParam))
#endif
#ifndef IS_POINTER_FLAG_SET_WPARAM
#	define IS_POINTER_FLAG_SET_WPARAM(wParam, flag)	(((DWORD)HIWORD(wParam) & (flag)) == (flag))
#endif
#ifndef GET_POINTERID_WPARAM
#	define GET_POINTERID_WPARAM(wParam)				(LOWORD(wParam))
#endif
#ifndef IS_POINTER_FLAG_SET_WPARAM
#	define IS_POINTER_FLAG_SET_WPARAM(wParam, flag)	(((DWORD)HIWORD(wParam) & (flag)) == (flag))
#endif
#ifndef IS_POINTER_NEW_WPARAM
#	define IS_POINTER_NEW_WPARAM(wParam)				IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_NEW)
#endif
#ifndef IS_POINTER_INRANGE_WPARAM
#	define IS_POINTER_INRANGE_WPARAM(wParam)			IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_INRANGE)
#endif
#ifndef IS_POINTER_INCONTACT_WPARAM
#	define IS_POINTER_INCONTACT_WPARAM(wParam)			IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_INCONTACT)
#endif
#ifndef IS_POINTER_FIRSTBUTTON_WPARAM
#	define IS_POINTER_FIRSTBUTTON_WPARAM(wParam)		IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_FIRSTBUTTON)
#endif
#ifndef IS_POINTER_SECONDBUTTON_WPARAM
#	define IS_POINTER_SECONDBUTTON_WPARAM(wParam)		IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_SECONDBUTTON)
#endif
#ifndef IS_POINTER_THIRDBUTTON_WPARAM
#	define IS_POINTER_THIRDBUTTON_WPARAM(wParam)		IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_THIRDBUTTON)
#endif
#ifndef IS_POINTER_FOURTHBUTTON_WPARAM
#	define IS_POINTER_FOURTHBUTTON_WPARAM(wParam)		IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_FOURTHBUTTON)
#endif
#ifndef IS_POINTER_FIFTHBUTTON_WPARAM
#	define IS_POINTER_FIFTHBUTTON_WPARAM(wParam)		IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_FIFTHBUTTON)
#endif
#ifndef IS_POINTER_PRIMARY_WPARAM
#	define IS_POINTER_PRIMARY_WPARAM(wParam)			IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_PRIMARY)
#endif
#ifndef HAS_POINTER_CONFIDENCE_WPARAM
#	define HAS_POINTER_CONFIDENCE_WPARAM(wParam)		IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_CONFIDENCE)
#endif
#ifndef IS_POINTER_CANCELED_WPARAM
#	define IS_POINTER_CANCELED_WPARAM(wParam)			IS_POINTER_FLAG_SET_WPARAM(wParam, POINTER_MESSAGE_FLAG_CANCELED)
#endif

